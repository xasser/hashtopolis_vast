name: Docker â€“ Build & Publish

on:
  push:
    branches: [ "main" ]          # push "latest" on main
    tags: [ "v*", "*.*.*" ]       # versioned tags e.g. v1.2.3 or 1.2.3
  pull_request:
    branches: [ "main" ]          # build only, no push
  workflow_dispatch: {}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/yourimage
  PLATFORMS: linux/amd64,linux/arm64
  DOCKER_CONTEXT: .               # change if your Dockerfile is in a subfolder
  DOCKERFILE: ./Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Reclaim space on GitHub-hosted runners
      - name: Free disk space
        if: ${{ runner.os == 'Linux' }}
        run: |
          df -h
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc || true
          docker system prune -af || true
          df -h

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx (with GC limits)
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --oci-worker-gc --oci-worker-gc-keepstorage 8GB

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # latest on default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # semver tags when you push a tag like v1.2.3 or 1.2.3
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # short SHA tag for any push
            type=sha

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (PRs) / Build & Push (main/tags)
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false   # reduce artifact size/time
          sbom: false         # disable SBOM to save space
          # Example build args (uncomment & customize)
          # build-args: |
          #   APP_VERSION=${{ github.ref_name }}
