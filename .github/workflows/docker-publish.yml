name: Docker â€“ Build & Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "*.*.*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/yourimage   # <-- change
  PLATFORMS: linux/amd64,linux/arm64
  BUILD_CONTEXT_DIR: .
  DOCKERFILE: ./Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Docker is running (and clear conflicting env)
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v docker >/dev/null 2>&1; then
            curl -fsSL https://get.docker.com | sh
          fi
          sudo systemctl start docker || sudo service docker start || true
          unset DOCKER_CONTEXT || true
          docker info >/dev/null

      # Free a few GB without touching Docker images/containers (fast, safe)
      - name: Quick free space (safe)
        shell: bash
        run: |
          set -euxo pipefail
          df -h /
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc || true
          df -h /

      # If a previous run left a broken BuildKit container, remove it
      - name: Reset stale Buildx/BuildKit
        shell: bash
        run: |
          set -euo pipefail
          # Remove any existing builders (ignore errors)
          docker buildx ls >/dev/null 2>&1 || true
          for b in $(docker buildx ls 2>/dev/null | awk 'NR>1 {print $1}'); do
            docker buildx rm -f "$b" || true
          done
          # Remove any orphaned buildkit containers
          docker ps -a --filter 'name=buildx_buildkit' -q | xargs -r docker rm -f || true

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx (stable BuildKit, GC capped)
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: |
            image=moby/buildkit:v0.16.0
            network=host
          buildkitd-flags: "--oci-worker-gc --oci-worker-gc-keepstorage 6GB"

      # Bootstrap waits until the BuildKit container is actually running
      - name: Verify builder is up
        shell: bash
        run: |
          set -euo pipefail
          docker buildx inspect --bootstrap
          docker buildx ls

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT_DIR }}
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
