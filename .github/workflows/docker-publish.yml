name: Docker – Build & Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "*.*.*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/yourimage   # <-- change
  PLATFORMS: linux/amd64,linux/arm64
  DOCKER_CONTEXT: .
  DOCKERFILE: ./Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Make sure Docker CLI + daemon are available
      - name: Ensure Docker is running
        id: dockerd
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v docker >/dev/null 2>&1; then
            echo "::group::Install Docker"
            curl -fsSL https://get.docker.com | sh
            echo "::endgroup::"
          fi
          if ! docker info >/dev/null 2>&1; then
            # Try both services; ignore non-systemd errors
            sudo systemctl start docker || sudo service docker start || true
            # Fallback: spawn dockerd in background if needed
            if ! docker info >/dev/null 2>&1; then
              sudo nohup dockerd >/tmp/dockerd.log 2>&1 &
              sleep 5
            fi
          fi
          # Final check (will fail the job early if still broken)
          docker info >/dev/null

      # Check free space and do a short cleanup only if needed
      - name: Check free space
        id: space
        shell: bash
        run: |
          set -euo pipefail
          df -h /
          avail_mb=$(df -Pm / | awk 'NR==2{print $4}')
          echo "avail_mb=$avail_mb" >> "$GITHUB_OUTPUT"

      - name: Quick cleanup (≤ 2 min, only if <15 GB free)
        if: ${{ fromJSON(steps.space.outputs.avail_mb) < 15000 }}
        timeout-minutes: 2
        shell: bash
        run: |
          set -euxo pipefail
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc || true
          docker system prune -af || true
          df -h /

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx (GC budget 6GB)
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: "--oci-worker-gc --oci-worker-gc-keepstorage 6GB"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.DOCKER_CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
